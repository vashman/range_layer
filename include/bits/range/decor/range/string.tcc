//

//          Copyright Sundeep S. Sangha 2015 - 2017.
// Distributed under the Boost Software License, Version 1.0.
//    (See accompanying file LICENSE_1_0.txt or copy at
//          http://www.boost.org/LICENSE_1_0.txt)

#ifndef RANGE_LAYER_BITS_RANGE_STRING_TCC
#define RANGE_LAYER_BITS_RANGE_STRING_TCC

namespace range_layer {

/*===========================================================
  ctor
===========================================================*/
template <typename T, typename Traits, typename Alloc>
range <std::basic_string<T, Traits, Alloc> * const>::range (
 std::basic_string<T, Traits, Alloc> * const _ptr
)
: range <const std::basic_string<T, Traits, Alloc> * const>
  {_ptr}
, handle {_ptr}
{}

/*===========================================================
  ctor
===========================================================*/
template <typename T, typename Traits, typename Alloc>
  range <const std::basic_string<T, Traits, Alloc> * const>
::range (
 const std::basic_string<T, Traits, Alloc> * const _ptr
)
: const_handle {_ptr}
, pos {1}
{}

/*===========================================================
  insert
===========================================================*/

/*===========================================================
  save
===========================================================*/

/*===========================================================
  size
===========================================================*/

/*===========================================================
  position
===========================================================*/

/*===========================================================
  read
===========================================================*/

/*===========================================================
  write
===========================================================*/

/*===========================================================
  advance
===========================================================*/

/*===========================================================
  reverse
===========================================================*/

/*===========================================================
  advance_n
===========================================================*/

/*===========================================================
  reverse_n
===========================================================*/

/*===========================================================
  has_readable
===========================================================*/

/*===========================================================
  has_writable
===========================================================*/

/*===========================================================
  erase
===========================================================*/

/*===========================================================
  erase_all
===========================================================*/

/*===========================================================
  shrink
===========================================================*/

/*===========================================================
  expand
===========================================================*/

} //----------------------------------------------range layer
#endif
